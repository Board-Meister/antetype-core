var i=(t=>(t.STRUCTURE="antetype.structure",t.MIDDLE="antetype.structure.middle",t.BAR_BOTTOM="antetype.structure.bar.bottom",t.CENTER="antetype.structure.center",t.COLUMN_LEFT="antetype.structure.column.left",t.COLUMN_RIGHT="antetype.structure.column.right",t.BAR_TOP="antetype.structure.bar.top",t.MODULES="antetype.modules",t))(i||{});var c=(r=>(r.INIT="antetype.init",r.DRAW="antetype.draw",r.CALC="antetype.calc",r))(c||{}),s=class{#t;#r=null;#e=null;static inject={minstrel:"boardmeister/minstrel",herald:"boardmeister/herald"};inject(e){this.#t=e}async#n(e,n){if(!this.#e){let r=this.#t.minstrel.getResourceUrl(this,"core.js");this.#r=(await import(r)).default,this.#e=this.#r({canvas:n,modules:e,injected:this.#t})}return this.#e}async register(e){let{modules:n,canvas:r}=e.detail;n.core=await this.#n(n,r)}async init(e){if(!this.#e)throw new Error("Instance not loaded, trigger registration event first");let{base:n,settings:r}=e.detail;for(let a in r)this.#e.setting.set(a,r[a]);let o=this.#e.meta.document;o.base=n;let l=[];return(this.#e.setting.get("fonts")??[]).forEach(a=>{l.push(this.#e.font.load(a))}),await Promise.all(l),o.layout=await this.#e.view.recalculate(o,o.base),await this.#e.view.redraw(o.layout),o}async cloneDefinitions(e){if(!this.#e)throw new Error("Instance not loaded, trigger registration event first");e.detail.element!==null&&(e.detail.element=await this.#e.clone.definitions(e.detail.element))}static subscriptions={[i.MODULES]:"register","antetype.init":"init","antetype.calc":[{method:"cloneDefinitions",priority:-255}]}},u=s,f=u;export{s as AntetypeCore,c as Event,f as default};
